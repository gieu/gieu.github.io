---
import type { HTMLAttributes } from "astro/types";

type Props = HTMLAttributes<"a">;

const { href, class: className, ...props } = Astro.props;

const { pathname } = Astro.url;
const subpath = pathname.match(/[^\/]+/g);
const isActive = href === pathname || href === "/" + subpath?.[0];
---

<a href={href} class:list={[className, { active: isActive }]} {...props}>
    <slot />
</a>

<style>
    a {
        @apply px-4 py-2 rounded-lg transition-all duration-300;
        @apply text-sm font-medium text-cod_gray-700;
        @apply hover:bg-daisy_bush-50 hover:text-daisy_bush-700;
        @apply focus:outline-none focus:ring-2 focus:ring-daisy_bush-500 focus:ring-offset-2;
        @apply relative overflow-hidden;
    }

    a.active {
        @apply bg-daisy_bush-600 text-white;
        @apply hover:bg-daisy_bush-700;
        @apply shadow-md;
        @apply font-semibold;
    }

    /* Efecto de hover animado */
    a::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
        transition: left 0.5s;
    }

    a:hover::before {
        left: 100%;
    }

    /* Efecto de active link m√°s sutil */
    a.active::before {
        background: linear-gradient(90deg, transparent, rgba(255,255,255,0.1), transparent);
    }
</style>
